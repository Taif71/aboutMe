{"version":3,"sources":["utils.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["takeTo","key","url","information","window","open","App","className","style","display","justifyContent","alignItems","height","color","backgroundColor","barColor","fontWeight","fontSize","prompt","promptSymbol","allowTabs","commands","helpMenu","info","about","msg","Date","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"g3BAgGaA,EAAS,SAACC,GACnB,IAAIC,EAAa,GAEjB,OAAQD,GACJ,IAAK,OACDC,EAAMC,IACN,MACJ,IAAK,SACDD,EAAMC,IACN,MAEJ,IAAK,SACDD,EAAMC,IAQd,OADAC,OAAOC,KAAKH,EAAK,UACVA,GClDII,E,iLA/CP,OACI,yBAAKC,UAAU,WACXC,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,UAGZ,kBAAC,IAAD,CACIC,MAAM,QACNC,gBAAgB,UAChBC,SAAS,UACTP,MAAO,CAAEQ,WAAY,OAAQC,SAAU,SACvCC,OAAO,SACPC,aAAa,IACbC,WAAW,EACXC,SAAU,CACN,KAAQ,iBDhC5BC,6jBCiCoB,MAAS,kBDXZ,WACjB,IAAIC,EAAc,GAUlB,OARAA,GAAQ,uFACSpB,IADT,6CAE2BA,IAF3B,iBAEwDA,IAFxD,yBAGQA,IAHR,kCAIJ,oUCI+BqB,IACf,UAAa,kBDECrB,KCAd,SAAY,kBDoBGA,KCnBf,QAAW,iBDsBxB,oBAAaA,KAAb,qBACWA,KADX,mGAIaA,MCzBA,KAAQ,kBAAMH,EAAO,SACrB,OAAU,kBAAMA,EAAO,WAEvB,OAAU,kBAAMA,EAAO,WACvB,UAAa,iBD4B1B,itBC3Ba,MAAS,iBDmCtB,mPClCa,MAAS,iBDyCtB,waCxCa,KAAQ,iBDPrB,oOCSSyB,IACI,0TAKI,IAAIC,a,GAzCdC,aCLEC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e87f2ce7.chunk.js","sourcesContent":["import * as information from './information.json';\n\nexport const help = ():String => {\n    let helpMenu:String = '';\n\n    helpMenu += '\\nKindly use the following commands.\\n\\n' +\n        '1. help - to check out all the commands.\\n' +\n        '2. clear - To clear the terminal\\n' +\n        '3. about - To know about me\\n' +\n        '4. interests - Shows areas of my current and future interests\\n' +\n        //'publications - a list of my published research work\\n' +\n        '5. learning - what I\\'m currently learning\\n' +\n        '6. next - Shows what I want to pursue next\\n' +\n        '7. contact - Shows contact information\\n' +\n        //'8. blog - (Work in progress...)\\n' +\n        //'9. medium - (Work in progress...)\\n' +\n        // 'photography - takes you to my flickr profile\\n' +\n        '8. github - Takes you to my github profile\\n' +\n        '9. manliness - Philosophy behind what it means to be a Man\\n' +\n        '10. books - My list of Book Recommendations' + \n        '11. films - My Film Making journey' + \n        '12. tech - List of techs that I am currently focusing'\n\n\n    return helpMenu;\n};\n\nexport const about = (): String => {\n    let info:String = '';\n\n    info += '\\n\\nThis section like others will be updated as time progresses.' +\n        `\\nHi! I'm ${information.name}.\\n` +\n        `I'm currently a graduate of ${information.bsDegree} from ${information.bsUni}. ` +\n        `I'm from ${information.hometown}, currently living in Dhaka.\\n` +\n        '\\n\\n' +\n        `My interests are vast from Technology,Business,Reading fiction/non-fictions, Sports,\\nPhilosophy to  learning a bunch of interesting and weird things.` +\n        `\\nI am on my journey to becoming the best version of myself. My whole life purpose is engulfed by only one aspiration, that is to help others without any expectations.`;\n        \n    return info\n};\n\nexport const interests = ():String => information.interestedIn;\nexport const tech = ():String => {\n    return \"I am a Computer Science major. I graduated from North South University.\" + \"\\nI am currently working with MERN stack. However, looking to get into Django.\\n\\n\" + \n    \"AI and Data Science: This field seems cool. Looking to dive in soon...\"\n};\n\n// export const publications = ():String => {\n//     let pub:String = '';\n\n//     pub += 'I do not have any publications as of yet. This section will be updated soon.';\n\n//     // for (let i in information.publications) {\n//     //     pub += `\\n-\\n` +\n//     //         `${information.publications[i].title}\\n` +\n//     //         `${information.publications[i].link}\\n`;\n//     // }\n\n//     return pub;\n// };\n\nexport const learning = (): String =>  information.nowLearning;\n\nexport const contact = ():String => {\n    return `\\nEmail - ${information.email}` +\n        `\\nGithub - ${information.github}` +\n        `\\nBlog - Currently Work in progress` +\n        `\\nMedium - Currently Work in progress!` +\n        `\\nLinkedIn - ${information.linkedin}` \n        //\"linkedin\": \"https://www.linkedin.com/in/mohammad-bakshi-0b20051a7/\"\n        // `\\nflickr - ${information.flickr}` + \n        // `\\ntwitter - ${information.twitter}` +\n        // `\\nacm-vcard - ${information.acm_vcard}`;\n};\nexport const manliness = ():String => {\n    return \"This is a philosophy that I'm trying to constantly learn and upgrade. It requires a lot of free thinking and seeking new knowledge. which I struggle to do sometimes as well.\" +\n    \"Men should be men. And my childhood experiences of being the nice guy largely affected me. Until I decided to learn how to be a Man.\" + \n    \"I had to go through many internal challenges. Those who are introvert from childhood will understand the struggle. I'll be updating this here and my philosophy of being a man once my blog is up.\" + \n    \"Some of the transformation I had to go through (till now)\\n 1.Face my fears 2. Learn to deal with my insecurities 3. Approach Girls and learn to attract women 4.Talk to strangers etc. I am still working on myself so...\"\n        \n        \n};\nexport const books = ():String => {\n    return \"Book Recommendations\\n\"+\n    \"Fiction: I haven't gotten into Fiction. Please Recommend me some through email)\\n\\n\"  + \n    \"Non-Fiction: \\n1. Atomic Habits \\n2. Models: attract women through honesty \\n3. Can't Hurt Me \\n4. The obstacle is the way and more...\"\n        \n};\n\nexport const films = ():String => {\n    return \"Film making has been one of my hobbies. Unfortunately even though I have my skills due to lack of money,tech and time haven't been able to put out some content. My focus currently is on my Career. I would like to get back to film making soon.\\n\" + \n    \"However, I have worked with my closest friends and co-founded Half Cake Productions. Check us out:\\n\\n\" + \n    \"Youtube: Half Cake Productions \\nInstagram: Search Half Cake Productions\\n\"\n        \n};\n\nexport const takeTo = (key:string):string => {\n    let url:string = '';\n\n    switch (key) {\n        case 'blog':\n            url = information.blog;\n            break;\n        case 'medium':\n            url = information.medium;\n            break;\n        \n        case 'github':\n            url = information.github;\n            break;\n        default:\n            break;\n    }\n\n\n    window.open(url, '_blank');\n    return url;\n};\n\n","import React, { Component } from 'react';\nimport Terminal from 'terminal-in-react';\n\nimport {\n    about,\n    help,\n    contact,\n    interests,\n    //publications,\n    learning,\n    takeTo,\n    manliness,\n    books,\n    films,\n    tech\n} from './utils';\n\nclass App extends Component<{}, {}> {\n    render() {\n        return (\n            <div className=\"terminal\"\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100vh\"\n                }}\n            >\n                <Terminal\n                    color='white'\n                    backgroundColor='#2b051b'\n                    barColor='#1B1B1B'\n                    style={{ fontWeight: \"bold\", fontSize: \"1.8em\" }}\n                    prompt='yellow'\n                    promptSymbol='$'\n                    allowTabs={false}\n                    commands={{\n                        'help': () => help(),\n                        'about': () => about(),\n                        'interests': () => interests(),\n                        //'publications': () => publications(),\n                        'learning': () => learning(),\n                        'contact': () => contact(),\n                        'blog': () => takeTo('blog'),\n                        'medium': () => takeTo('medium'),\n                        //'photography': () => takeTo('photography'),\n                        'github': () => takeTo('github'),\n                        'manliness': () => manliness(),\n                        'books': () => books(),\n                        'films': () => films(),\n                        'tech': () => tech()\n                    }}\n                    msg={                        \n                        '       Welcome to my About Me Site.\\n   I am Mohammad Tasneemul Alam Bakshi.\\n\\n' + \n                        '***IMPORTANT: Read Through Below: ***' +\n                        '\\n❓Type help (and press enter or return) to get started!\\n'+\n                        '❓Type clear to clean the terminal\\n'+\n                        '❓You can also click on the green dot on top to maximize the console.\\n' +\n                        `⏱${new Date()}`\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}